# Import necessary libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
import os

# Debugging: Print current working directory
print("Current Working Directory:", os.getcwd())

# 1. Load the dataset
# Provide the full file path if needed, e.g., r"C:\Users\HP\Downloads\supermarket_sales.csv"
file_path = r"C:\Users\HP\Downloads\Salary_Data.csv"  # Replace with the correct file path
try:
    df = pd.read_csv(file_path)
    print("Dataset loaded successfully.")
except FileNotFoundError as e:
    print(f"Error: {e}")
    print("Ensure the file path is correct and the file exists.")
    exit()  # Stop execution if the file is not found

# 2. Explore the data
print("First 5 rows of the dataset:")
print(df.head())
print("\nDataset Info:")
print(df.info())
print("\nSummary Statistics:")
print(df.describe())

# 3. Select relevant columns (Example: 'YearsExperience' and 'Salary')
# Replace 'YearsExperience' and 'Salary' with column names from your dataset
if 'YearsExperience' not in df.columns or 'Salary' not in df.columns:
    print("Error: The dataset does not contain the required columns.")
    exit()

X = df[["YearsExperience"]]  # Independent variable
y = df["Salary"]  # Dependent variable

# 4. Split the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# 5. Create and train the linear regression model
model = LinearRegression()
model.fit(X_train, y_train)

# 6. Make predictions
y_pred = model.predict(X_test)

# 7. Evaluate the model
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f"\nModel Evaluation:")
print(f"Mean Squared Error (MSE): {mse}")
print(f"R-squared (RÂ²): {r2}")

# 8. Visualize the results
plt.scatter(X, y, color="blue", label="Actual Data")
plt.plot(X, model.predict(X), color="red", label="Regression Line")
plt.title("Linear Regression: YearsExperience vs Salary")
plt.xlabel("Years of Experience")
plt.ylabel("Salary")
plt.legend()
plt.show()
